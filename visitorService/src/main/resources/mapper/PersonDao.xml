<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sx.visitorService.dao.PersonDao">

    <resultMap type="com.sx.visitorService.entity.Person" id="PersonMap">
        <result property="personId" column="person_id" jdbcType="INTEGER"/>
        <result property="personName" column="person_name" jdbcType="VARCHAR"/>
        <result property="personPower" column="person_power" jdbcType="INTEGER"/>
        <result property="personPhone" column="person_phone" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="birth" column="birth" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PersonMap">
        select
          person_id, person_name, person_power, person_phone, password, birth
        from person
        where person_id = #{personId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PersonMap">
        select
          person_id, person_name, person_power, person_phone, password, birth
        from person
        <where>
            <if test="personId != null">
                and person_id = #{personId}
            </if>
            <if test="personName != null and personName != ''">
                and person_name = #{personName}
            </if>
            <if test="personPower != null">
                and person_power = #{personPower}
            </if>
            <if test="personPhone != null and personPhone != ''">
                and person_phone = #{personPhone}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="birth != null and birth != ''">
                and birth = #{birth}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from person
        <where>
            <if test="personId != null">
                and person_id = #{personId}
            </if>
            <if test="personName != null and personName != ''">
                and person_name = #{personName}
            </if>
            <if test="personPower != null">
                and person_power = #{personPower}
            </if>
            <if test="personPhone != null and personPhone != ''">
                and person_phone = #{personPhone}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="birth != null and birth != ''">
                and birth = #{birth}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="personId" useGeneratedKeys="true">
        insert into person(person_name, person_power, person_phone, password, birth)
        values (#{personName}, #{personPower}, #{personPhone}, #{password}, #{birth})
    </insert>

    <insert id="insertBatch" keyProperty="personId" useGeneratedKeys="true">
        insert into person(person_name, person_power, person_phone, password, birth)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.personName}, #{entity.personPower}, #{entity.personPhone}, #{entity.password}, #{entity.birth})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="personId" useGeneratedKeys="true">
        insert into person(person_name, person_power, person_phone, password, birth)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.personName}, #{entity.personPower}, #{entity.personPhone}, #{entity.password}, #{entity.birth})
        </foreach>
        on duplicate key update
        person_name = values(person_name),
        person_power = values(person_power),
        person_phone = values(person_phone),
        password = values(password),
        birth = values(birth)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update person
        <set>
            <if test="personName != null and personName != ''">
                person_name = #{personName},
            </if>
            <if test="personPower != null">
                person_power = #{personPower},
            </if>
            <if test="personPhone != null and personPhone != ''">
                person_phone = #{personPhone},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="birth != null and birth != ''">
                birth = #{birth},
            </if>
        </set>
        where person_id = #{personId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from person where person_id = #{personId}
    </delete>

    <!--用户注册-->
    <select id="register" resultMap="PersonMap">
    select * from Person
    <where>
    person_phone = #{personPhone}
    </where>

    </select>

    <!--用户登录-->
    <select id="loginUser" resultMap="PersonMap">
        select * from person
        <where>
            person_phone = #{personPhone} and password = #{password}
        </where>
    </select>
</mapper>

